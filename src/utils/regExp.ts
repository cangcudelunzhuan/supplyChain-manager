/**
 *正则表达式
 *
 * @class RegExp
 */
class RegExp {
  /**身份证 */
  static Idcard = {
    pattern: /(^\d{15}$)|(^\d{17}([0-9]|X)$)/,
    message: '身份证格式不正确',
  };
  /**邮箱 */
  static Email = {
    pattern: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$/,
    message: '邮箱格式不正确',
  };
  /**手机号 */
  static Phone = {
    pattern: /^1(3|4|5|6|7|8|9)\d{9}$/,
    message: '手机号格式不正确',
  };
  /**固话*/
  static Telephone = {
    // pattern:/^(\d{3}-\d{8})|(\d{4}\-\d{7})$/,
    pattern: /^(0((\d{2}-\d{8,9})|(\d{3}-\d{7,8})))$/,
    message: '固定电话号码不正确',
  };
  /**金额-最多两位小数 */
  static Money = {
    pattern: /^(([1-9][0-9]{0,14})|(([0]\.\d{1,2}|[1-9][0-9]{0,14}\.\d{1,2})))$/,
    message: '必须大于0且最多两位小数，整数不超过15位',
  };
  /**利率-最多4位小数，0-100之间 */
  static Rate = {
    //pattern: /^(([1-9][0-9])|(([0]\.\d{1,2}|[1-9][0-9]?\.\d{1,2})))$/,
    pattern: /^(([1-9][0-9]{0,1})|(([0]\.\d{0,3}[1-9]|[1-9][0-9]{0,1}\.\d{0,3}[1-9])))$/,
    message: '必须为0-100的数字，且最多4位小数',
  };
  /**利率-最多4位小数，0-100之间 可以为0 */
  static RateZero = {
    pattern: /^(([0-9])|([1-9][0-9]{0,1})|(([0]\.\d{0,3}[1-9]|[1-9][0-9]{0,1}\.\d{0,3}[1-9])))$/,
    message: '必须为0-100的数字，且最多4位小数',
  };
  /**利率-最多4位小数，0-100之间 可以为100 */
  static RateMax = {
    //pattern: /^(([1-9][0-9])|(([0]\.\d{1,2}|[1-9][0-9]?\.\d{1,2})))$/,
    pattern: /^(([1][0][0])|([1-9][0-9]{0,1})|(([0]\.\d{0,3}[1-9]|[1-9][0-9]{0,1}\.\d{0,3}[1-9])))$/,
    message: '必须为0-100的数字，且最多4位小数',
  }; 
  /**社会信用统一代码 */
  static SocialCode = {
    pattern: /^(([A-Z\d]{18})|([A-Z\d]{10}))$/,
    message: '格式不正确',//'必须为10或18位的大写字母或数字'
  };
  /**出资机构编号 */
  static OrganizationNo = {
    pattern: /^[A-Z\d]{10}$/,
    message: '必须为10位的大写字母或数字',
  };
  /**产业园编号 */
  static IndustrialParkNo = {
    pattern: /30[0-9]{8}$/,
    message: '必须为10位数字，且以30开头',
  };
  /**比例数字-不超过100，且最多两位小数 */
  static ratioNumber = {
    pattern: /^([1-9]\d?(\.\d{1,2})?|0.\d{1,2}|100)$/,
    message: '必须大于0且最多两位小数，不超过100',
  };
  /**正整数 */
  static number = {
    pattern: /^[1-9][0-9]{0,7}$/,
    message: '必须为正整数，且不多于8位',
  };
  /**固定付息日*/
  static payDay = {
    pattern: /^(([1-9])||([1][0-9]){0,1}||([2][0-8]{0,1}))$/,
    message: '必须为0-28之间正整数',
  };
  /**密码格式*/
  static passWord = {
    pattern: /^[\s\S]{6,15}$/,
    message: '6-15位数字、字母或特殊字符',
  };
}

export default RegExp;
